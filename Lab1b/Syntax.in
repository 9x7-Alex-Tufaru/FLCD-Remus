<decllist> ::= <declaration>|<declaration> ","

<constant> ::= <integer>|<character>|<string>

<declaration> ::= define <type> " " <identifier> <decllist> [= <constant>]

<simpletype> ::= alpha|fibre|int

<arraydecl> ::= arrr of (<integer>|<identifier>) <identifier>

<type>  ::= <simpletype>|<arraydecl>

cmpdstmt ::= "BEGIN" stmtlist "END"

stmtlist ::= stmt | stmt ";" stmtlist

stmt ::= simplstmt | structstmt

<simplstmt> ::= <assignstmt> | <iostmt>

<assignstmt> ::= <identifier>=<expression>

<expression> ::= ["("] <expression> (+|-|*|/) <expression> [")"] | <term>

<term> ::= <identifier>|<constant>

<iostmt> ::= (read|write)"("<identifier>,<channel>")"

<channel> ::= stdin|stdout

structstmt ::= cmpdstmt | ifstmt | whilestmt

ifstmt ::= "IF" condition "THEN" stmt ["ELSE" stmt]

whilestmt ::= "WHILE" condition "DO" stmt

condition ::= expression RELATION expression

RELATION ::= "<" | "<=" | "=" | "<>" | ">=" | ">"